#ifndef _TYPES_H_
#define _TYPES_H_

#include "../../../configuration.hpp"

// maybe namespace?

namespace types{
static const int32_t NUMBER = 18;

enum class types {
    UNINIT,
    NOR,
    FIG,
    FLY,
    POI,
    GRO,
    ROC,
    BUG,
    GHO,
    STE,
    FIR,
    WAT,
    GRA,
    ELE,
    PSY,
    ICE,
    DRA,
    DAR,
    FAI
};

enum class status {
    UNINIT,
    POISON,
    TOX_POISON,
    BURN,
    PARALYSIS,
    SLEEP,
    FROZEN
};

// [attack][defender]
static const int32_t AFFINITIES[NUMBER][NUMBER] = 
{
    { 100, 100, 100, 100, 100,  50, 100,   0,  50, 100, 100, 100, 100, 100, 100, 100, 100, 100 },
    { 200, 100,  50,  50, 100, 200,  50,   0, 200, 100, 100, 100, 100,  50, 200, 100, 200,  50 },
    { 100, 200, 100, 100, 100,  50, 200, 100,  50, 100, 100, 200,  50, 100, 100, 100, 100, 100 },
    { 100, 100, 100,  50,  50,  50, 100,  50,   0, 100, 100, 200, 100, 100, 100, 100, 100, 200 },
    { 100, 100,   0, 200, 100, 200,  50, 100, 200, 200, 100,  50, 200, 100, 100, 100, 100, 100 },
    { 100,  50, 200, 100,  50, 100, 200, 100,  50, 200, 100, 100, 100, 100, 200, 100, 100, 100 },
    { 100,  50,  50,  50, 100, 100, 100,  50,  50,  50, 100, 200, 100, 200, 100, 100, 200,  50 },
    {   0, 100, 100, 100, 100, 100, 100, 200, 100, 100, 100, 100, 100, 200, 100, 100,  50, 100 },
    { 100, 100, 100, 100, 100, 200, 100, 100,  50,  50,  50, 100,  50, 100, 200, 100, 100, 200 },
    { 100, 100, 100, 100, 100,  50, 200, 100, 200,  50,  50, 200, 100, 100, 200,  50, 100, 100 },
    { 100, 100, 100, 100, 200, 200, 100, 100, 100, 200,  50,  50, 100, 100, 100,  50, 100, 100 },
    { 100, 100,  50,  50, 200, 200,  50, 100,  50,  50, 200,  50, 100, 100, 100,  50, 100, 100 },
    { 100, 100, 200, 100,   0, 100, 100, 100, 100, 100, 200,  50,  50, 100, 100,  50, 100, 100 },
    { 100, 200, 100, 200, 100, 100, 100, 100,  50, 100, 100, 100, 100,  50, 100, 100,   0, 100 },
    { 100, 100, 200, 100, 200, 100, 100, 100,  50,  50,  50, 200, 100, 100,  50, 200, 100, 100 },
    { 100, 100, 100, 100, 100, 100, 100, 100,  50, 100, 100, 100, 100, 100, 100, 200, 100,   0 },
    { 100,  50, 100, 100, 100, 100, 100, 200, 100, 100, 100, 100, 100, 200, 100, 100,  50,  50 },
    { 100, 200, 100,  50, 100, 100, 100, 100,  50,  50, 100, 100, 100, 100, 100, 200, 200, 100 }
};

}

#endif //!_TYPES_H_